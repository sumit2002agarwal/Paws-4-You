{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n\nfunction useMediaQuery(query) {\n  _s();\n\n  const getMatches = query => {\n    // Prevents SSR issues\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n\n    return false;\n  };\n\n  const [matches, setMatches] = useState(getMatches(query));\n\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n\n  useEffect(() => {\n    const matchMedia = window.matchMedia(query); // Triggered at the first client-side load and if query changes\n\n    handleChange(); // Listen matchMedia\n\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener('change', handleChange);\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener('change', handleChange);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n  return matches;\n}\n\n_s(useMediaQuery, \"USReK4ZSAivkH1DT4PcvWqjhOHY=\");\n\nexport default useMediaQuery;","map":{"version":3,"names":["useEffect","useState","useMediaQuery","query","getMatches","window","matchMedia","matches","setMatches","handleChange","addListener","addEventListener","removeListener","removeEventListener"],"sources":["C:/Users/win11/Desktop/adopet/frontend/src/hooks/useMediaQuery.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nfunction useMediaQuery(query) {\r\n  const getMatches = (query) => {\r\n    // Prevents SSR issues\r\n    if (typeof window !== 'undefined') {\r\n      return window.matchMedia(query).matches;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const [matches, setMatches] = useState(getMatches(query));\r\n\r\n  function handleChange() {\r\n    setMatches(getMatches(query));\r\n  }\r\n\r\n  useEffect(() => {\r\n    const matchMedia = window.matchMedia(query);\r\n\r\n    // Triggered at the first client-side load and if query changes\r\n    handleChange();\r\n\r\n    // Listen matchMedia\r\n    if (matchMedia.addListener) {\r\n      matchMedia.addListener(handleChange);\r\n    } else {\r\n      matchMedia.addEventListener('change', handleChange);\r\n    }\r\n\r\n    return () => {\r\n      if (matchMedia.removeListener) {\r\n        matchMedia.removeListener(handleChange);\r\n      } else {\r\n        matchMedia.removeEventListener('change', handleChange);\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [query]);\r\n\r\n  return matches;\r\n}\r\n\r\nexport default useMediaQuery;\r\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC5B,MAAMC,UAAU,GAAID,KAAD,IAAW;IAC5B;IACA,IAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC;MACjC,OAAOA,MAAM,CAACC,UAAP,CAAkBH,KAAlB,EAAyBI,OAAhC;IACD;;IACD,OAAO,KAAP;EACD,CAND;;EAQA,MAAM,CAACA,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACG,UAAU,CAACD,KAAD,CAAX,CAAtC;;EAEA,SAASM,YAAT,GAAwB;IACtBD,UAAU,CAACJ,UAAU,CAACD,KAAD,CAAX,CAAV;EACD;;EAEDH,SAAS,CAAC,MAAM;IACd,MAAMM,UAAU,GAAGD,MAAM,CAACC,UAAP,CAAkBH,KAAlB,CAAnB,CADc,CAGd;;IACAM,YAAY,GAJE,CAMd;;IACA,IAAIH,UAAU,CAACI,WAAf,EAA4B;MAC1BJ,UAAU,CAACI,WAAX,CAAuBD,YAAvB;IACD,CAFD,MAEO;MACLH,UAAU,CAACK,gBAAX,CAA4B,QAA5B,EAAsCF,YAAtC;IACD;;IAED,OAAO,MAAM;MACX,IAAIH,UAAU,CAACM,cAAf,EAA+B;QAC7BN,UAAU,CAACM,cAAX,CAA0BH,YAA1B;MACD,CAFD,MAEO;QACLH,UAAU,CAACO,mBAAX,CAA+B,QAA/B,EAAyCJ,YAAzC;MACD;IACF,CAND,CAbc,CAoBd;EACD,CArBQ,EAqBN,CAACN,KAAD,CArBM,CAAT;EAuBA,OAAOI,OAAP;AACD;;GAvCQL,a;;AAyCT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}